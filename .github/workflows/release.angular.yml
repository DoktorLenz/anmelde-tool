name: Release Angular as Dockerimage

concurrency: release

on:
  push:
    tags:
      - v*

env:
  VERSION: ""
  ARTIFACT_NAME: scoutventure-spa

jobs:
  build-angular:
    name: Build Angular App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./angular

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Cache node modules
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js environment
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Clean Distribution Directory
        run: npm run ci:clean

      - name: Build Application
        run: npm run ci:build

      - name: List Files in Distribution Directory
        run: ls -R ./dist

      - name: Upload Build Artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: ./angular/dist/**

  build-docker-image:
    name: Build Docker Image and Upload to Registry
    needs: build-angular
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Extract tag name without 'v' prefix and set as env variable
        run: |
          VERSION=$(git describe --tags --abbrev=0 | sed 's/v//')
          echo "VERSION=${VERSION}" >> ${GITHUB_ENV}

      - name: Download Build Artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: ./angular/dist

      - name: List Files in Distribution Directory
        run: ls -R

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY_URL }}
          username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6
        with:
          context: .
          push: true
          tags: |
            ${{vars.DOCKER_REGISTRY_URL}}/${{ env.ARTIFACT_NAME }}:latest
            ${{vars.DOCKER_REGISTRY_URL}}/${{ env.ARTIFACT_NAME }}:${{ env.VERSION }}
          file: ./docker/angular/Dockerfile
