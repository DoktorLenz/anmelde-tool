name: Pipeline for PRs

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  JAVA_VERSION: "21"
  JAVA_DISTRIBUTION: "temurin"
  JAVA_CACHE: maven
  NODE_VERSION: 20

jobs:
  build-frontend:
    name: Build Angular Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./angular
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Cache node modules
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js environment
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Clean Distribution Directory
        run: npm run ci:clean

      - name: Build Application
        run: npm run ci:build

  sonar-frontend:
    name: Sonar Frontend
    needs: build-frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./angular
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js environment
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Clean Distribution Directory
        run: npm run ci:clean

      - name: Run Linter
        run: npm run ci:lint

      - name: Change eslint relative to absolute path
        run: sed -i 's+/home/runner/work/scoutventure/scoutventure/+/github/workspace/+g' eslint/result.json

      - name: Upload to Sonar
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: angular/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  unit-test-frontend:
    name: Unit Test Frontend
    needs: build-frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./angular
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Cache node modules
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js environment
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Clean Distribution Directory
        run: npm run ci:clean

      - name: Run Unit Tests
        run: npm run ci:test

      - name: Upload converage reports to Codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/angular/coverage/cobertura/cobertura-coverage.xml
          flags: Frontend-Unit-Test
          fail_ci_if_error: true

  build-backend:
    name: Build Spring-Boot Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./spring
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: ${{ env.JAVA_CACHE }}

      - name: Cache Maven packages
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean package -DskipTests

  unit-test-backend:
    name: Unit Test Backend
    needs: build-backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./spring
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: ${{ env.JAVA_CACHE }}

      - name: Cache Maven packages
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache SonarCloud packages
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile Tests
        run: mvn clean resources:testResources compiler:compile compiler:testCompile

      - name: Run Unit Tests and Upload to Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn jacoco:prepare-agent surefire:test jacoco:report org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/spring/target/site/jacoco/jacoco.xml
          flags: Backend-Unit-Test
          fail_ci_if_error: true

  integration-test-backend:
    name: Integration Test Backend
    needs: build-backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./spring
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: ${{ env.JAVA_CACHE }}

      - name: Cache Maven packages
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache SonarCloud packages
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile Tests
        run: mvn test-compile

      - name: Run Integration Tests
        run: mvn jacoco:prepare-agent-integration failsafe:integration-test jacoco:report-integration

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 # v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/spring/target/site/jacoco-it/jacoco.xml
          flags: Backend-Integration-Test
          fail_ci_if_error: true

  arch-test-backend:
    name: ArchUnit Test Backend
    needs: build-backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./spring
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: ${{ env.JAVA_CACHE }}

      - name: Cache Maven packages
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile Tests
        run: mvn test-compile

      - name: Run ArchUnit Tests
        run: mvn arch-unit:arch-test
